#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <stdbool.h>

char* concat(const char *s1, const char *s2){
	char *result = malloc(strlen(s1) + strlen(s2) + 1);
	strcpy(result, s1);
	strcat(result, s2);
	return result;
}


char* IntToString(int i){
	int temp=i, count=1;
	while (temp!=0){
		temp/=10;
		count++;
	}
	char * buffer_temp = malloc ((count+1) * sizeof(char));
	char buffer [strlen(buffer_temp) +1];
	sprintf(buffer, "%d", i);
	strcpy(buffer_temp, buffer);
	return buffer_temp;
}


char* FloatToString(float d) {
	char * buf;
	int n=20;
	float fraction = d - ((long)d);
	int number_of_decimal_digits=1, limit=1;
	int power=10;
	while(power*fraction >= limit && number_of_decimal_digits<=4){
		fraction = power*fraction;
		power*=10;
		number_of_decimal_digits++;
	}
	int p;
	buf= malloc (number_of_decimal_digits*10 * sizeof(float));
	for (p = 0; p < number_of_decimal_digits; p++) {
		float x;
		if (snprintf(buf, n, "%.*g", p, d) >= n)
			break;
		sscanf(buf, "%f", &x);
		if (x == d)
		break;
	}
	return buf;
}


int inverso( int x) {
	return -(x);}

float inverso2( float x) {
	return -(x);}

int main() {
}

